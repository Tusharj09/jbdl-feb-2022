package com.example.L15.L15;


/**
 *
 *
 *
 *
 * foreign -
 *      key is which is primary key in one table and referrece into the other table(foreign key)
 *
 *
 *      - Single primary key
 *      - Composite primary key
 *
 *
 *
 *      Notifications (Message received from various inputs)
 *                  ---> external party / whatsapp web api to trigger notification (web chatbot)
 *
 *     Many systems calling this notification
 *
 *
 *     (User ) ------> Notification (trigger message like - {template 1} hey $name , your account is created)
 *     (Transaction) ----|  (trigger messages like - {template 2}
 *     hey $name , your account has been credited with $credit $currency amount)
 *
 *
 *
 *     UserService
 *     (key - user_id - primary key) -- both of them are auto increment
 *
 *     Transaction
 *     (key - transaction_id - primary key) -- both of them are auto increment
 *
 *
 *     Notification -- considering on time messages --- real time messages
 *       UserService   ----> request Paylad (payload - template 1 , id - userId, dynamic fields - {name : Carol})
 *       Transaction ----> request Paylad (payload - template 2 , id - transactionId, dynamic_fields {credit : 200, currency : $})
 *
 *
 *      Design Schema for Notification -- table
 *
 *
 *      columns
 *      {
 *          "idempotency_key" : (transactionId) --> Can I have this column as primary key --? (Yes  , No )
 *          "source" -- userService / transactionService  ---> Can I use this make something usefule -->Yes
 *          "template_id" -- template_1 / template_2
 *          "dynamic fields" : {json}
 *          "to" : "userId"
 *          "status" : "SENT / IN_PROGRESS | NOT_PICKED | FAILED"
 *          "created_at"
 *          "updated_at"
 *      }
 *
 *
 * Transaction ---------> NotificationService (received a message)  ------> push Message to a DistributedQueue (Q1 - {Message1})
 * (Transaction -- had some internal failure)
 *
 *
 *              ---(triggered same request again)--->                            push Message to a DistributedQueue (Q1 - Message1)
 *
 *      Q1 -- {Message1, Message3, Message4, Message9, Message11, Message1}
 *
 *      Service (Consume message from queue --->
 *      // sender
 *          "to" -- column --> userservice --> getUserDetails --> getUserNumber
 *
 *      call whatsapp B2B api (getUserNumber) --> bookmyshow --> yes / no -> tickets on whatsapp)
 *
 *      ---> How many times message -- your account has been credited would be triggered to a user -- ?
 *      Message1 ---> userId 1 --> idempotency key -- (transactionId)
 *      Message3 --> user 3
 *      Message1 ---> userId 1--- idempotency key -- (transactionId)
 *
 *
 *      --> how many times -- messages --- Yes 2 ---> twice (---- No -----)
 *      Whats a work-around here
 *
 *      ---> yesterday too
 *      -----> Idempotency key --> unique value generated by the client
 *
 *          {
 *              idempotency_key :
 *              source :                        as primary key
 *          }
 *
 *          Composite key
 *          --->
 * @Id
 *
 *
 * How to map composite keys --->
 *
 *
 */